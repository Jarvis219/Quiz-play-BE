// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EQuestionType {
  SINGLE_CHOICE
  MULTIPLE_CHOICE
}

enum ERole {
  ADMIN
  USER
}

model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique @db.VarChar
  full_name String? @db.VarChar
  phone_number String? @db.VarChar
  username  String @unique @db.VarChar
  password  String? @db.VarChar
  avatar String? @db.VarChar
  address String? @db.VarChar
  reset_password_token String? @db.VarChar
  token_expiry_date DateTime? @db.Timestamp(6)
  email_unverify String? @db.VarChar
  verify_email_token String? @db.VarChar
  is_verified Boolean? @default(false)
  is_active Boolean? @default(true)
  role ERole? @default(USER)
  quizzes Quiz[]
  quizLikes QuizLike[]
  quizResults QuizResult[]
}

model Quiz {
  id        Int      @default(autoincrement()) @id
  slug      String   @unique
  code      String? @unique
  authorId  Int
  title     String
  content   String?
  photo     String? @db.VarChar
  published Boolean? @default(false)
  views     Int? @default(0)
  share     Int? @default(0)
  author    User?    @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  countPlayers Int? @default(0)
  quizDetails QuizDetail[]
  quizLikes QuizLike[]
  quizResults QuizResult[]

}


model QuizDetail {
  id        Int      @default(autoincrement()) @id
  quizId    Int?
  question String
  points    Int     @default(1)
  type      EQuestionType? @default(SINGLE_CHOICE)
  answers   Answer[]
  photo     String? @default("")
  keyImage  String? @default("")
  quiz      Quiz?    @relation(fields: [quizId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Answer {
  id        Int      @default(autoincrement()) @id
  quizDetailId Int?
  answer    String
  isCorrect Boolean? @default(false)
  quizDetail QuizDetail? @relation(fields: [quizDetailId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model QuizLike {
  id        Int      @default(autoincrement()) @id
  quizId    Int?
  userId    Int?
  quiz      Quiz?    @relation(fields: [quizId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model QuizResult {
  id        Int      @default(autoincrement()) @id
  quizId    Int?
  userId    Int?
  score     Int?
  quiz      Quiz?    @relation(fields: [quizId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}